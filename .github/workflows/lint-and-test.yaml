name: tests
on: [pull_request]

env:
  DOCKER_FILE_DIRECTORY: environments
  DOCKER_COMPOSE_DIRECTORY: environments/ci
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_BUILDKIT: 1
  # RUN_POETRY_INSTALL_AT_BUILD_TIME: true

jobs:
  lint-and-test:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.image }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        python-version: ["3.8", "3.9"]
        include:
          - os: ubuntu
            image: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: pwd && docker-compose --version && docker --version

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache/${{ matrix.python-version }}
          key: buildx-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ github.ref }}
            buildx-

      - name: Cache Docker registry
        uses: actions/cache@v3
        with:
          path: /tmp/docker-registry/${{ matrix.python-version }}
          key: docker-registry-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            docker-registry-${{ github.ref }}
            docker-registry-

      - name: Boot-up local Docker registry
        run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2
      
      - name: Wait for Docker registry
        run: npx wait-on tcp:5000

      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     push: false
      #     tags: core:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache/${{ matrix.python-version }}
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new/${{ matrix.python-version }},mode=max

      # - name: Build docker image
      #   run: docker-compose build --parallel --build-arg PYTHON_VERSION=${{ matrix.python-version }} core
      #   working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Generate Docker image tag
        id: generate_docker_image_tag
        run: |
            SHA=${{ github.sha }}
            TAG=$(TZ=UTC-9 date '+%Y%m')-${SHA:0:7}
            echo "DOCKER_IMAGE_TAG_CI=$TAG" >> $GITHUB_ENV
            echo TAG $TAG
            echo "::set-output name=docker_image_tag_ci::$TAG"

      - name: Build docker image
        run: |
          docker buildx bake \
          --builder="${{ steps.buildx.outputs.name }}" \
          --set="core.args.PYTHON_VERSION=${{ matrix.python-version }}" \
          --set="*.cache-from=type=local,src=/tmp/.buildx-cache/${{ matrix.python-version }}" \
          --set="*.cache-to=type=local,dest=/tmp/.buildx-cache-new/${{ matrix.python-version }}" \
          --push \
          -f docker-compose.yaml
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      # - name: Build docker image
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: ${{ env.DOCKER_FILE_DIRECTORY }}/Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: false
      #     tags: ascender:${{ github.sha }}
      #     cache-from: type=local,src=/tmp/.buildx-cache/${{ matrix.python-version }}
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new/${{ matrix.python-version }},mode=max
      #     build-args: |
      #       PYTHON_VERSION=${{ matrix.python-version }}
      #       RUN_POETRY_INSTALL_AT_BUILD_TIME=true

      # - name: Start docker container
      #   run: docker-compose up -d core
      #   working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: ls image -a
        run: docker image ls -a
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Docker Compose Pull
        run: docker compose pull
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: ls image -a
        run: docker image ls -a
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Create and start docker container
        run: docker-compose up --no-build -d
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      # pytest-cov export coverage data to a file
      # However, the directory made by actions/checkout does not allow write
      # chmod is needed to resolve above problem
      - name: Change permission
        run: chmod 777 .

      - name: Move .venv directory
        run: docker-compose exec -T core mv ../.venv .
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: ls
        run: docker container ls
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: ls
        run: docker-compose exec -T core ls -a
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      # - name: Install dependencies
      #   run: docker-compose exec -T core poetry install --no-interaction
      #   working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Run lint
        run: docker-compose exec -T core make lint
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

      - name: Run test code
        run: docker-compose exec -T core make test
        working-directory: ${{ env.DOCKER_COMPOSE_DIRECTORY }}

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache